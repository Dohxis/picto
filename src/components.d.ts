/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  IComponent,
  IUsage,
} from '@/model';


export namespace Components {

  interface PictoGram {
    'component': IComponent;
    'usage': IUsage;
  }
  interface PictoGramAttributes extends StencilHTMLAttributes {
    'component'?: IComponent;
    'usage'?: IUsage;
  }

  interface PictoGraph {
    'guidesUrl': string;
    'manifestUrl': string;
  }
  interface PictoGraphAttributes extends StencilHTMLAttributes {
    'guidesUrl'?: string;
    'manifestUrl'?: string;
  }

  interface PictoMd {
    'source': string;
  }
  interface PictoMdAttributes extends StencilHTMLAttributes {
    'source'?: string;
  }

  interface PictoNav {
    'components': IComponent[];
  }
  interface PictoNavAttributes extends StencilHTMLAttributes {
    'components'?: IComponent[];
    'onComponentSelected'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'PictoGram': Components.PictoGram;
    'PictoGraph': Components.PictoGraph;
    'PictoMd': Components.PictoMd;
    'PictoNav': Components.PictoNav;
  }

  interface StencilIntrinsicElements {
    'picto-gram': Components.PictoGramAttributes;
    'picto-graph': Components.PictoGraphAttributes;
    'picto-md': Components.PictoMdAttributes;
    'picto-nav': Components.PictoNavAttributes;
  }


  interface HTMLPictoGramElement extends Components.PictoGram, HTMLStencilElement {}
  var HTMLPictoGramElement: {
    prototype: HTMLPictoGramElement;
    new (): HTMLPictoGramElement;
  };

  interface HTMLPictoGraphElement extends Components.PictoGraph, HTMLStencilElement {}
  var HTMLPictoGraphElement: {
    prototype: HTMLPictoGraphElement;
    new (): HTMLPictoGraphElement;
  };

  interface HTMLPictoMdElement extends Components.PictoMd, HTMLStencilElement {}
  var HTMLPictoMdElement: {
    prototype: HTMLPictoMdElement;
    new (): HTMLPictoMdElement;
  };

  interface HTMLPictoNavElement extends Components.PictoNav, HTMLStencilElement {}
  var HTMLPictoNavElement: {
    prototype: HTMLPictoNavElement;
    new (): HTMLPictoNavElement;
  };

  interface HTMLElementTagNameMap {
    'picto-gram': HTMLPictoGramElement
    'picto-graph': HTMLPictoGraphElement
    'picto-md': HTMLPictoMdElement
    'picto-nav': HTMLPictoNavElement
  }

  interface ElementTagNameMap {
    'picto-gram': HTMLPictoGramElement;
    'picto-graph': HTMLPictoGraphElement;
    'picto-md': HTMLPictoMdElement;
    'picto-nav': HTMLPictoNavElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
